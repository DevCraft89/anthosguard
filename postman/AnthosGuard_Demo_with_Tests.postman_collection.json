{
  "info": {
    "name": "AnthosGuard Demo with Tests",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Publish Account Event",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"user_id\":\"demo1\",\"email\":\"user@example.com\",\"country\":\"US\"}"
        },
        "url": {
          "raw": "http://{{AC_IP}}/accounts",
          "host": [
            "{{AC_IP}}"
          ],
          "path": [
            "accounts"
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "pm.test(\"Response has status ok\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.status).to.eql(\"ok\");",
              "});",
              "pm.test(\"Payload user_id matches\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.event.payload.user_id).to.eql(\"demo1\");",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Fraud Detector Health",
      "request": {
        "method": "GET",
        "url": {
          "raw": "http://{{FD_IP}}/healthz",
          "host": [
            "{{FD_IP}}"
          ],
          "path": [
            "healthz"
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "pm.test(\"ok field is true\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.ok).to.eql(true);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Fraud Detector Status",
      "request": {
        "method": "GET",
        "url": {
          "raw": "http://{{FD_IP}}/status",
          "host": [
            "{{FD_IP}}"
          ],
          "path": [
            "status"
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "pm.test(\"Has totals field\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('totals');",
              "});",
              "pm.test(\"Has recent events\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.recent.length).to.be.at.least(1);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Fraud Detector Dashboard",
      "request": {
        "method": "GET",
        "url": {
          "raw": "http://{{FD_IP}}/dashboard",
          "host": [
            "{{FD_IP}}"
          ],
          "path": [
            "dashboard"
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "pm.test(\"Contains HTML table\", function () {",
              "    pm.expect(pm.response.text()).to.include('<table');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "AC_IP",
      "value": "34.44.38.124"
    },
    {
      "key": "FD_IP",
      "value": "34.41.205.88"
    }
  ]
}